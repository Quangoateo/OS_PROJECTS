/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Client;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.FlowLayout;
import java.awt.event.KeyEvent;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;

/**
 *
 * @author XPS
 */
public class ChatClientGui extends javax.swing.JFrame {

    /**
     * Creates new form ChatClient
     */
    
    String username;
    String host;
    int port;
    Socket socket;
    DataOutputStream dos;
    private boolean isconnected = false;
    
    
    
    public ChatClientGui() {
        initComponents();
        
        connectbtn.setEnabled(false);
        
    }
    public void initFrame(String username, String host, int port){
        this.username = username;
        this.host = host;
        this.port = port;
        //set frame title
        setTitle("Chat Client: " + username);
        tf_username.setText(username);
        tf_addr.setText(host);
        tf_port.setText(String.valueOf(port));
        //connect
        connect();
    }
    
    public boolean isconnected(){
        return this.isconnected;
    }
    //connect
    public void connect(){
        displayMsg("...","Connecting",Color.BLACK,Color.BLACK);
        try{
            //create new socket
            socket = new Socket(host,port);
            dos = new DataOutputStream(socket.getOutputStream());
            //new user ->send msg to server
            dos.writeUTF("MODE_JOIN " + username);
            displayMsg("Ready to send message","Connected",Color.RED,Color.RED) ;          
            //
            //start thread
            new Thread(new ClientThread(socket,this)).start();
            //set boolean to 
            isconnected = true;
        }
        catch(Exception e){
            isconnected = false;
            JOptionPane.showMessageDialog(this, "cannot connect", "connection failed", JOptionPane.ERROR_MESSAGE);
            displayMsg(" IOE xception:" + e.getMessage(), "Error", Color.BLACK, Color.RED);
        }
    }
    //display own msg
    public void displaySelfMsg(String msg, String header){
        ta_chat.setEditable(true);
        setMsgHeader(header,Color.MAGENTA);
        setMsgContent(msg,Color.BLACK);
        ta_chat.setEditable(false);
    }
    //display other msg
    public void displayMsg(String msg, String header, Color headercolor, Color contentcolor){
        ta_chat.setEditable(true);
        setMsgHeader(header, headercolor);
        setMsgContent(msg,contentcolor);
        ta_chat.setEditable(false);
    }
    //get and set header (sender) of the msg
    public void setMsgHeader(String header, Color color){
        int a = ta_chat.getDocument().getLength();
        ta_chat.setCaretPosition(a);
        ta_chat.replaceSelection(header  + ":");
    }
    //get and set content of msg
    public void setMsgContent(String msg, Color color){
        int a = ta_chat.getDocument().getLength();
        ta_chat.setCaretPosition(a);
        ta_chat.replaceSelection(msg + "\n\n");
    }
    
    //display online list
    //use Vector instead of Araylist
    //bc Vector is Thread Safe
    public void displayOnlineList(Vector list){
       ta_online.setEditable(true);
       ta_online.removeAll();
       ta_online.setText("");
       Iterator i = list.iterator();
       while(i.hasNext()){
           Object e = i.next();        
//           JPanel panel = new JPanel();
//           panel.setLayout(new FlowLayout(FlowLayout.LEFT));
//           panel.setBackground(Color.white);
//           JLabel label = new JLabel();
//           label.setText(" " + e );
//           panel.add(label);
           int a = ta_chat.getDocument().getLength();
           ta_online.append(" " + e + "\n");
           
           format();
       }
       ta_online.setEditable(false);
    }
    public void printOnlineList(Vector list){
        displayOnlineList(list);
    }
    private void format(){
        int a = ta_online.getDocument().getLength();
        ta_online.setCaretPosition(a);
        ta_online.replaceSelection("\n");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_addr = new javax.swing.JTextField();
        disconbtn = new javax.swing.JButton();
        tf_port = new javax.swing.JTextField();
        logoutbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_username = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        tf_chat = new javax.swing.JTextField();
        sendbtn = new javax.swing.JButton();
        connectbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_chat = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_online = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        disconbtn.setText("Disconn");
        disconbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconbtnActionPerformed(evt);
            }
        });

        logoutbtn.setText("Logout");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Address");

        jLabel1.setText("Username");

        jLabel4.setText("Port");

        tf_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_usernameActionPerformed(evt);
            }
        });

        jLabel5.setText("Online User");

        jLabel2.setText("Password");

        tf_chat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_chatKeyPressed(evt);
            }
        });

        sendbtn.setText("Send");
        sendbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendbtnActionPerformed(evt);
            }
        });

        connectbtn.setText("Connect");
        connectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectbtnActionPerformed(evt);
            }
        });

        ta_chat.setColumns(20);
        ta_chat.setRows(5);
        jScrollPane2.setViewportView(ta_chat);

        ta_online.setColumns(20);
        ta_online.setRows(5);
        ta_online.setMinimumSize(new java.awt.Dimension(7, 21));
        ta_online.setPreferredSize(new java.awt.Dimension(7, 21));
        jScrollPane3.setViewportView(ta_online);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_addr, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(tf_port))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(tf_username, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                            .addComponent(jPasswordField1)))
                    .addComponent(tf_chat))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sendbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(connectbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(disconbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoutbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel5)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(connectbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(disconbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoutbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tf_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_addr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sendbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tf_chat))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void disconbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconbtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this, "Confirm Disconnect?", "Disconnect", JOptionPane.YES_NO_OPTION);
        if(a == 0){
            try {
                socket.close();
                System.out.println("disconnected"); 
                System.exit(0);
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_disconbtnActionPerformed

    private void tf_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_usernameActionPerformed

    private void tf_chatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_chatKeyPressed
        // TODO add your handling code here:
        int a = evt.getKeyChar();
        if (a == KeyEvent.VK_ENTER) {
            try {
                String msg = username + " " + tf_chat.getText();
                dos.writeUTF("MODE_BROADCAST " + msg);
                displaySelfMsg(" " + tf_chat.getText(), username);
                tf_chat.setText("");
            } catch (Exception e) {
                displayMsg("Cannot connect to server, try again", "Error", Color.RED, Color.RED);
            }
        }
    }//GEN-LAST:event_tf_chatKeyPressed

    private void sendbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendbtnActionPerformed
        try{
            String msg = username + " " + tf_chat.getText();
            dos.writeUTF("MODE_BROADCAST " + msg);
            displaySelfMsg(" " + tf_chat.getText(), username);
            tf_chat.setText("");
        }
        catch(Exception e){
            displayMsg("Cannot connect to server, try again", "Error", Color.RED, Color.RED);
        }
    }//GEN-LAST:event_sendbtnActionPerformed

    private void connectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectbtnActionPerformed
        // TODO add your handling code here;
       //username = tf_username.getText();
        connect();
    }//GEN-LAST:event_connectbtnActionPerformed

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this, "Confirm Logout?");
        if(a == 0){
            try {
                socket.close();
                System.out.println("return to login");
                setVisible(false);
                new Login().setVisible(true);
                
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_logoutbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatClientGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ChatClientGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectbtn;
    private javax.swing.JButton disconbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JButton sendbtn;
    private javax.swing.JTextArea ta_chat;
    private javax.swing.JTextArea ta_online;
    private javax.swing.JTextField tf_addr;
    private javax.swing.JTextField tf_chat;
    private javax.swing.JTextField tf_port;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables
}
