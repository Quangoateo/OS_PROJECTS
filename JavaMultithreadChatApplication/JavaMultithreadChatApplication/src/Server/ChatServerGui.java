/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Server;

import java.net.ServerSocket;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author XPS
 */
public class ChatServerGui extends javax.swing.JFrame {
    
    ServerSocket server;
    SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
    //create a thread for server
    Thread thread;
    ServerThread serverthread;
    //socket list
    public Vector socketlist = new Vector();
    //client list
    public Vector clientlist = new Vector();
    int port = 15496;
    
    
    /**
     * Creates new form ChatServerGui
     */
    public ChatServerGui() {
        initComponents();
        tf_port.setText(String.valueOf(port));
    }
    
    public void displayMsg(String msg){
        Date date = new Date();
        //display time on server msg
        ta_server.append(sdf.format(date) + ": " + msg + "\n");
        int a = ta_server.getText().length() - 1;
        ta_server.setCaretPosition(a);    
    }
    
    public void addSocketList(Socket socket){
        try{
            socketlist.add(socket);
            displayMsg("Socket added to list");
        }
        catch(Exception e){
            displayMsg("Error adding Socket to list: " + e.getMessage());
        }
    }
    
    public void addClientList(String client){
        try{
            clientlist.add(client);
            displayMsg("Client added to list");
        }
        catch(Exception e){
            displayMsg("Error adding Client to list " + e.getMessage());
        }
    }
    
    public Socket printClientList(String client){
        Socket csoc = null;
        for(int i = 0; i < clientlist.size(); i++){
            if(clientlist.get(i).equals(client)){
                csoc = (Socket) socketlist.get(i);
                break;
            }
        }
        return csoc;
    }
    
    public void removeClientFromList(String client){
        try{
            for(int i = 0 ; i < clientlist.size() ; i++){
                if(clientlist.elementAt(i).equals(client)){
                    clientlist.removeElementAt(i);
                    socketlist.removeElementAt(i);
                    displayMsg("Remove " + client);
                    break;
                }
            }
        }
        catch(Exception e){
            displayMsg("Error Removing: " + e.getMessage() );
        }
    }
    
    public void displayClientList(Vector list){
        appendClientList(list);
        
    }
    public void appendClientList(Vector list){
        ta_online.setEditable(rootPaneCheckingEnabled);
        ta_online.removeAll();
        ta_online.setText("");
        for(int i = 0 ; i < list.size(); i++){
            ta_online.append((String) list.elementAt(i) + "\n");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta_server = new javax.swing.JTextArea();
        startbtn = new javax.swing.JButton();
        endbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tf_port = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ta_online = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chat Server");
        setBackground(new java.awt.Color(255, 204, 204));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        ta_server.setColumns(20);
        ta_server.setRows(5);
        jScrollPane1.setViewportView(ta_server);

        startbtn.setText("Start");
        startbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startbtnActionPerformed(evt);
            }
        });

        endbtn.setText("End");
        endbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endbtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Port");

        ta_online.setColumns(20);
        ta_online.setRows(5);
        jScrollPane3.setViewportView(ta_online);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(startbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                        .addComponent(endbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tf_port))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(startbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(endbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startbtnActionPerformed
        // TODO add your handling code here:
        serverthread = new ServerThread(port,this);
        thread = new Thread(serverthread);
        thread.start();
        
        new Thread(new OnlineUserThread(this)).start();
        startbtn.setEnabled(false);
        endbtn.setEnabled(true);
        
        
    }//GEN-LAST:event_startbtnActionPerformed

    private void endbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endbtnActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this,"Close server?");
        if(a == 0){
            serverthread.stop();
        }
    }//GEN-LAST:event_endbtnActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        //displayClientList(clientlist);
    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatServerGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatServerGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton endbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton startbtn;
    private javax.swing.JTextArea ta_online;
    private javax.swing.JTextArea ta_server;
    private javax.swing.JTextField tf_port;
    // End of variables declaration//GEN-END:variables
}
